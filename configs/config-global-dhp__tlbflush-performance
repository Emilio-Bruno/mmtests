### pft is a microbenchmark for page fault rates.
### 
### ebizzy is intended to simulate the backend of a database backend but it
### is not IO intensive. Instead it is both scheduler and allocator intensive.
### Regressions here can indicate a regression in either area.
###
### tlbflush is a basic micro-benchmark that was used by Alex Shi to calculate
### a tlb flushall shift value in the kernel

# MM Test Parameters
export MMTESTS="pft ebizzy tlbflush"
export RUN_WARMUP=


# Machine configuration

# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=ext3
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=""

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_PLAIN=
export MONITORS_GZIP=
export MONITORS_WITH_LATENCY="vmstat"
export MONITOR_UPDATE_FREQUENCY=10

# EBizzy
export EBIZZY_MAX_THREADS=$((NUMCPUS*2))
export EBIZZY_DURATION=10
export EBIZZY_ITERATIONS=100

# Page Fault Test (PFT)
export PFT_ITERATIONS=20
export PFT_MAPPING_SIZE=$((MEMTOTAL_BYTES/5))
export PFT_MAX_CLIENTS=$NUMCPUS
export PFT_USE_PROCESSES=yes
export PFT_PAGESIZES=base

# Alex Shi's tlbflush microbenchmark
export TLBFLUSH_MAX_THREADS=$((NUMCPUS*2))
export TLBFLUSH_MAX_ENTRIES=512
export TLBFLUSH_ITERATIONS=320
