### This configuration runs a number of basic workloads and in parallel
### there a large file being randomly accessed. The objective is to measure
### how a few different workloads are affected by IO or how they starve
### parallel reads. Poor results in these areas tend to manifest as a poor
### interactivity experience.
###
### gitcheckout checks out different branches of the kernel tree multple
### times as it has been observed that large checkouts has stalled the
### system at various times in the past
###
### stutter simualtes a simple workload. One part uses a lot of anonymous
### memory, a second measures mmap latency and a third copies a large file.
### The primary metric is checking for mmap latency.

# MM Test Parameters
export MMTESTS="gitcheckout stutter"


# Machine configuration

# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=ext3
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=""

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS="read-latency"
export MONITORS_PLAIN=
export MONITORS_GZIP="proc-vmstat top"
export MONITORS_WITH_LATENCY="vmstat iostat"
export MONITOR_UPDATE_FREQUENCY=10
export MONITOR_READ_LATENCY_RANDOM=yes

# Large copy and untar
export LARGECOPY_SRCTAR=$WEBROOT/large-tar-file-1.tar.bz2
export LARGECOPY_TARGETSIZE_MB=$((MEMTOTAL_BYTES*2/1048576))
export LARGECOPY_THREADS=1

# GIMP simple test

# Git checkout
export GITCHECKOUT_SOURCETAR=$WEBROOT/gitcheckout/linux-2.6.tar.gz
export GITCHECKOUT_SOURCE=$SSHROOT/linux-2.6
export GITCHECKOUT_COMMITS=v2.6.14,v3.2,v2.6.16,v3.4,v2.6.18
export GITCHECKOUT_ITERATIONS=15
export GITCHECKOUT_CACHE=hot

# stutter
export STUTTER_MEMFAULT_SIZE=$((MEMTOTAL_BYTES*3/4))
export STUTTER_MEMFAULT_TMPFS=no
export STUTTER_FILESIZE=$(($MEMTOTAL_BYTES*2))
export STUTTER_BLOCKSIZE=$((2*1048576))
