### fsmark-threaded creates a number of small files from varying numbers
### of threads. The total number of files created is related to the size
### of memory but it's tuned such that later iterations of the test should
### start pushing reclaim. The intent is to catch when page reclaim and
### slab shrinking starts being a problem.

# MM Test Parameters
export MMTESTS="fsmark-threaded"
export RUN_WARMUP=


# Machine configuration
#export RUN_TUNINGS="$RUN_TUNINGS sysctl"

# Test disk to setup (optional)
#export TESTDISK_RAID_DEVICES=
#export TESTDISK_RAID_MD_DEVICE=/dev/md0
#export TESTDISK_RAID_OFFSET=63
#export TESTDISK_RAID_SIZE=250019532
#export TESTDISK_RAID_TYPE=raid0
#export TESTDISK_PARTITION=/dev/sda6
#export TESTDISK_FILESYSTEM=ext3
#export TESTDISK_MKFS_PARAM="-f -d agcount=8"
#export TESTDISK_MOUNT_ARGS=inode64,delaylog,logbsize=262144,nobarrier

# List of monitors
export RUN_MONITOR=yes
export MONITORS_ALWAYS=
export MONITORS_PLAIN=
export MONITORS_GZIP="proc-vmstat top"
export MONITORS_WITH_LATENCY="vmstat iostat"
export MONITOR_UPDATE_FREQUENCY=10

# FS-Mark
export FSMARK_FILESIZE=$((4096*4))
export FSMARK_MIN_THREADS=1
export FSMARK_MAX_THREADS=$NUMCPUS
export FSMARK_NR_SUB_DIRECTORIES=10000
export FSMARK_NR_FILES_PER_ITERATION=125000
export FSMARK_ITERATIONS=$((MEMTOTAL_BYTES*3/2/(FSMARK_FILESIZE-1024)/FSMARK_NR_FILES_PER_ITERATION))
