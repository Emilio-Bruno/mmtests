#!/bin/bash
###SHELLPACK preamble openfoambuild OpenFOAM-v1812
GIT_LOCATION=https://develop.openfoam.com/Development/openfoam.git
MIRROR_LOCATION="$WEBROOT/openfoambuild/"

install-depends cmake gnuplot mpfr-devel glu-devel flex \
	libqt4-devel qt4-assistant-adp-devel qt4-x11-tools

###SHELLPACK parseargBegin
###SHELLPACK parseargEnd

# Versions set in ThirdParty repository, not built through mmtests.
# If this was to be built through mmtests then modify the etc/config.sh/FOO
# files (e.g. etc/config.sh/CGAL) to set version (e.g. fftw-system) and paths
THIRDPARTY_FFTW_VERSION="3.3.7"
THIRDPARTY_BOOST_VERSION="1_66_0"
THIRDPARTY_CGAL_VERSION="4.12.2"
THIRDPARTY_SCOTCH_VERSION="6.0.9"

###SHELLPACK git_fetch openfoambuild-${VERSION}.tar.gz openfoambuild-${VERSION}-installed
###SHELLPACK build_start openfoambuild-${VERSION}-installed
if [ ! -e ThirdParty ]; then
	rm -rf ThirdParty*
	echo Fetching ThirdParty
	file_fetch https://sourceforge.net/projects/openfoam/files/v2006/ThirdParty-v2006.tgz \
		$MIRROR_LOCATION/ThirdParty-v2006.tgz \
		../ThirdParty-v2006.tgz
	echo Expanding ThirdParty
	tar -xf ../ThirdParty-v2006.tgz
	mv ThirdParty-v2006 ThirdParty
fi

# Setup environment and check
source etc/bashrc || die "Failed to source etc/bashrc"
cd "$WM_PROJECT_DIR" || die "Failed to change to WM_PROJECT_DIR"

# Configure third party dependencies
sed -i -e "s/^boost_version=.*/boost_version=boost_$THIRDPARTY_BOOST_VERSION/"		etc/config.sh/CGAL   || die "Failed configure BOOST version"
sed -i -e "s/^cgal_version=.*/cgal_version=CGAL-$THIRDPARTY_CGAL_VERSION/"		etc/config.sh/CGAL   || die "Failed configure CGAL version"
sed -i -e "s/^SCOTCH_VERSION=.*/SCOTCH_VERSION=scotch_$THIRDPARTY_SCOTCH_VERSION/"	etc/config.sh/scotch || die "Failed configure SCOTCH version"
sed -i -e "s/\.\/b2/\.\/b2 cxxflags=\"$CXXFLAGS\"/" ThirdParty/makeCGAL	|| die "Failed to modify makeCGAL"

#if [ "$CXXFLAGS" != "" ]; then
#	pushd ThirdParty/boost_$BOOST_VERSION/libs/config > /dev/null || die "Failed to cd to boost configure directory"
#	sh ./configure || die "Failed to run boost configure"
#	popd > /dev/null
#	mv ThirdParty/boost_$BOOST_VERSION/libs/config/user.hpp ThirdParty/boost_$BOOST_VERSION/boost/config/user.hpp || die "Failed to install new user.hpp"
#fi

for BUILD in CGAL SCOTCH; do
	./ThirdParty/make$BUILD || die "Failed to build make$BUILD"
done

# Build openFOAM
foamSystemCheck || die "Failed foamSystemCheck"
./Allwmake -s -l -j || die "Failed to build Allwmake"
foamInstallationTest || die "Failed installation test"

# Configure MPI usage
sed -i -e 's/mpirun -np/mpirun $OPENFOAM_MPI_OPTS $MMTESTS_MPI_OPTS -np/' bin/tools/RunFunctions

echo openfoambuild installed successfully
